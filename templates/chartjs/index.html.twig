{% extends 'base.html.twig' %}

{% block title %}Chiffre d'Affaires{% endblock %}

{% block body %}
{% include "header/_header.html.twig" %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
    .total-wrapper { background-color: #426950; padding: 20px; text-align: center; }
    .total-text { font-size: 24px; font-weight: #f5f5f5; }
    .total-wrapper { background-color: #426950; padding: 20px; text-align: center; }
    .total-text { font-size: 24px; font-weight: #f5f5f5; }
</style>

{% include "header/_header.html.twig" %}

<div class="example-wrapper">
    <div class="total-wrapper">
        <p class="total-text">Somme totale : {{ resultss }} €</p>
    </div>
    <ul>
        {% for result in results %}
            <li>Date : {{ result['date_realisation']|date('Y-m-d') }}, chiffre d'affaire : {{ result['total'] }} €</li>
        {% endfor %}
    </ul>


<canvas id="chart"></canvas>
    {{ render_chart(chart, {'id': 'chart'}) }}

    <form method="get" action="{{ path('app_chiffre_affaires') }}">
        <label for="annee">Année :</label>
        <input type="text" name="annee" id="annee" placeholder="Exemple : 2023" />

        <label for="type_operation">Type d'Opération :</label>
    <select name="type_operation" id="type_operation">
        <option value="">Tous</option> <!-- Option pour afficher tous les types d'opération -->
        <option value="1">En cours</option>
        <option value="2">Fini</option>
        <!-- Ajoutez d'autres options de type d'opération au besoin -->
    </select>

  <label for="utilisateur">Utilisateur :</label>
<select name="utilisateur" id="utilisateur">
    <option value="">Tous</option> <!-- Option pour afficher toutes les utilisateurs -->
    {% for utilisateur in utilisateurs %}
        <option value="{{ utilisateur.id }}">{{ utilisateur.nom }}</option>
    {% endfor %}
</select>


        <button type="submit">Filtrer</button>
    </form>

    <form method="get" action="{{ path('app_chiffre_affaires') }}">
        <label for="annee">Année :</label>
        <input type="text" name="annee" id="annee" placeholder="Exemple : 2023" />

        <label for="type_operation">Type d'Opération :</label>
    <select name="type_operation" id="type_operation">
        <option value="">Tous</option> <!-- Option pour afficher tous les types d'opération -->
        <option value="1">En cours</option>
        <option value="2">Fini</option>
        <!-- Ajoutez d'autres options de type d'opération au besoin -->
    </select>

  <label for="utilisateur">Utilisateur :</label>
<select name="utilisateur" id="utilisateur">
    <option value="">Tous</option> <!-- Option pour afficher toutes les utilisateurs -->
    {% for utilisateur in utilisateurs %}
        <option value="{{ utilisateur.id }}">{{ utilisateur.nom }}</option>
    {% endfor %}
</select>


        <button type="submit">Filtrer</button>
    </form>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
<script>
$(document).ready(function() {
    // Interceptez le formulaire de filtrage
    $('#filter-button').click(function(event) {
        event.preventDefault(); // Empêche la soumission normale du formulaire
        var formData = $('form').serialize(); // Récupérez les données du formulaire

        // Envoyez une requête Ajax pour obtenir les résultats filtrés
        $.ajax({
            type: 'GET',
            url: '{{ path('app_chiffre_affaires_filtre') }}', // Utilisez la nouvelle route
            data: formData,
            success: function(data) {
                // Mettez à jour la page avec les données filtrées (par exemple, les résultats et le graphique)
                // Vous devrez implémenter cette mise à jour en fonction de votre logique spécifique.
                // Vous pouvez mettre à jour le contenu de <ul> et le graphique ici en utilisant les données JSON renvoyées.
                updatePageWithData(data);
            }
        });
    });

    function updatePageWithData(data) {
        // Mettez à jour le contenu de la liste des opérations
        var ul = $('ul');
        ul.empty();
        $.each(data, function(index, item) {
            var li = $('<li>').text('Date : ' + item.date_realisation + ', chiffre d\'affaire : ' + item.total + ' €');
            ul.append(li);
        });

        // Supprimez l'ancien graphique (le cas échéant)
        var chartCanvas = $('#chart');
        var oldChart = chartCanvas.data('chart');
        if (oldChart) {
            oldChart.destroy();
        }

        // Créez un nouveau graphique avec les données filtrées
        var chartData = {
            labels: data.map(function(item) {
                return item.date_realisation;
            }),
            datasets: [{
                label: 'Chiffre d\'affaires',
                backgroundColor: 'rgb(255, 99, 132)',
                borderColor: 'rgb(255, 99, 132)',
                data: data.map(function(item) {
                    return item.total;
                }),
            }],
        };

        var ctx = chartCanvas[0].getContext('2d');
        var newChart = new Chart(ctx, {
            type: 'bar',
            data: chartData,
            options: {} // Vous pouvez ajouter des options de configuration du graphique ici
        });

        // Stockez le nouveau graphique dans l'élément canvas
        chartCanvas.data('chart', newChart);
    }
});
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
{% endblock %}
