{% extends 'base.html.twig' %}

{% block title %}Chiffre d'Affaires{% endblock %}

{% block body %}

<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
    .total-wrapper { background-color: #426950; padding: 20px; text-align: center; }
    .total-text { font-size: 24px; font-weight: #f5f5f5; }
form {
margin-top: 20px;
}

label {
    display: block;
    font-weight: bold;
    margin-bottom: 5px;
}

input[type="date"] {
    width: 20%;
    padding: 5px;
    margin-bottom: 10px;
}

button.btn {
    background-color: #007BFF;
    color: #fff;
    padding: 10px 20px;
    border: none;
    cursor: pointer;
}

/* Style pour l'affichage des opérations */
ul {
    list-style-type: none;
    padding: 0;
}

li {
    margin-bottom: 10px;
}

/* Style pour le graphique */
.canva {
    margin-top: 20px;
}
h1 {
    text-align: center; 
    tex
    border: 2px solid ; 
    padding: 10px; /* Espacement interne */
    background-color: #111A00 ; 
    color: #FFFFFF;
}
h2 {
    text-align: center; 
    border: 2px solid ; 
    padding: 10px; /* Espacement interne */
    background-color: #008015; 
}
</style>

{% include "header/_header.html.twig" %}

<h1>Chiffre d'affaires et statistique</h1>

<h2>Filtrer votre recherche</h2>

<form method="GET" action="{{ path('app_chiffre_affaires') }}">
    <label for="dateDebut">Date de début:</label>
    <input type="date" id="dateDebut" name="dateDebut">
    
    <label for="dateFin">Date de fin:</label>
    <input type="date" id="dateFin" name="dateFin">

    <button type="submit" class="btn btn-primary">Filtrer</button>
</form>

<div class="example-wrapper">
    <div class="total-wrapper">
        <p class="total-text">Somme totale : {{ resultss }} €</p>
    </div>
    

    <div class="canva">
        <canvas id="myChart"></canvas>
    </div>
    {% if results is not empty %}
        <p>Chiffre d'affaires pour la période sélectionnée :</p>
        <ul>
            {% for result in results %}
                <li>Date : {{ result['date_realisation']|date('Y-m-d') }}, chiffre d'affaires : {{ result['total'] }} €</li>
            {% endfor %}
        </ul>
    {% else %}
        <p>Aucun chiffre d'affaires calculé pour les dates sélectionnées.</p>
    {% endif %}
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>

// Regrouper les prestations en fonction de leur taille (petite, moyenne, grosse)
    const petitsPrestations = [];
    const moyennesPrestations = [];
    const grossesPrestations = [];

    {% for result in results %}
        {% if result['total'] <= 1000 %}
            petitsPrestations.push({ date: "{{ result['date_realisation']|date('Y-m-d') }}", total: {{ result['total'] }} });
        {% elseif result['total'] <= 2500 %}
            moyennesPrestations.push({ date: "{{ result['date_realisation']|date('Y-m-d') }}", total: {{ result['total'] }} });
        {% else %}
            grossesPrestations.push({ date: "{{ result['date_realisation']|date('Y-m-d') }}", total: {{ result['total'] }} });
        {% endif %}
    {% endfor %}

    // Calculer le chiffre d'affaires pour chaque groupe
    const chiffreAffairesPetits = petitsPrestations.reduce((total, prest) => total + prest.total, 0);
    const chiffreAffairesMoyennes = moyennesPrestations.reduce((total, prest) => total + prest.total, 0);
    const chiffreAffairesGrosses = grossesPrestations.reduce((total, prest) => total + prest.total, 0);

    // Définir les couleurs pour chaque groupe
    const backgroundColors = [
        'rgb(255, 99, 132)', // Couleur pour les petites prestations
        'rgb(75, 192, 192)', // Couleur pour les moyennes prestations
        'rgb(255, 205, 86)'  // Couleur pour les grosses prestations
    ];

    const ctx = document.getElementById('myChart');
    new Chart(ctx, {
        type: 'pie',
        data: {
            labels: ['Petite Prestation', 'Moyenne Prestation', 'Grosse Prestation'],
            datasets: [{
                data: [chiffreAffairesPetits, chiffreAffairesMoyennes, chiffreAffairesGrosses],
                backgroundColor: backgroundColors
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>



{% endblock %}
